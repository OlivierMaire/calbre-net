@inject SearchService SearchService
<div class="book-thumb p-1 d-flex flex-column">
    @* <MudPaper Elevation="0"> *@
    <MudLink Href="@CalibreBook.BookLink">
        <div class=" book-cover">

            <img src="@CalibreBook.CoverUrl" Alt="@CalibreBook.Title"
                class="mud-image object-contain object-center mud-elevation-5 rounded-lg" />
       
        </div>
    </MudLink>
    <div class="book-info p-1 d-flex flex-column flex-grow-1">

        <div class="book-title">
            <MudLink Typo="Typo.body1" Color="Color.Default" Align="Align.Left" Href="@CalibreBook.BookLink">
                <b>@CalibreBook.Title</b>
            </MudLink>
        </div>
        <div class="book-authors">
            <ul class="rounded-lg">
                @foreach (var author in CalibreBook.Authors)
                {
                    <li>
                        <MudLink Typo="Typo.body2" Align="Align.Left" Href="@SearchService.GetSearchUrl(author)">@author.Name</MudLink>
                    </li>
                }
            </ul>
        </div>
        <div class="flex-grow-1"></div>

        @if (CalibreBook.Series != null && !String.IsNullOrEmpty(CalibreBook.Series.Name))
        {
            <div class="book-series d-flex flex-row ">
                <MudLink Typo="Typo.caption" Align="Align.Left" Href="@SearchService.GetSearchUrl(CalibreBook.Series)">
                    @CalibreBook.Series.Name</MudLink>
                <MudText Typo="Typo.caption" Class="pl-1">(@CalibreBook.SeriesIndex)</MudText>
            </div>
        }


        @if (CalibreBook.Rating != null)
        {
            <div class="book-rating">
                <a href="@SearchService.GetSearchUrl(CalibreBook.Rating)">
                    <calibre_net.Client.Components.Shared.StarRatingDisplay Value="@(CalibreBook.Rating.Rating ?? 0)" />
                </a>
            </div>
        }

    </div>
    @* </MudPaper> *@
</div>
@code {

    [Parameter] public BookDto CalibreBook { get; set; } = null!;

}