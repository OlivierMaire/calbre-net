@page "/book/{id:int}"
@attribute [Authorize]

@using System.Globalization
@inject ApiClients.BookClient BookClient
@inject IStringLocalizer<calibre_net.Shared.Resources.Shared> L

<PageTitle>@CalibreBook?.Title</PageTitle>

@if (CalibreBook != null)
{
    <div class="book-details">
        <div class=" book-cover">

            <img src="@CalibreBook.CoverUrl" Alt="@CalibreBook.Title"
                class="mud-image object-contain object-center mud-elevation-5 " />
        </div>
        <div class="right-side">
          <BookActionBar Book="CalibreBook" @rendermode="InteractiveWebAssembly" />
            <div>

                <MudText Typo="Typo.h4" GutterBottom="true">@CalibreBook.Title</MudText>

                <div class="book-authors">
                        @{
                            var first = true;
                        foreach (var author in CalibreBook.Authors)
                        {
                               @if (!first) {
                                <span> &amp; </span>
                            }
                                <MudLink Typo="Typo.body2" Align="Align.Left" Href="@author.AuthorLink">@author.Name</MudLink>
                             @if (first) {
                                first = false;
                            }
                        }
                        }
                </div>

                @if (CalibreBook.Series != null && !String.IsNullOrEmpty(CalibreBook.Series.Name))
                {
                    <div class="book-series">
                       
                        <MudText Typo="Typo.caption" Class="pr-1"> Book @CalibreBook.SeriesIndex of </MudText>
                        <MudLink Typo="Typo.caption" Align="Align.Left" Href="@CalibreBook.Series.SeriesLink">
                            @CalibreBook.Series.Name</MudLink>
                    </div>
                }

                @if (CalibreBook.Rating != null)
                {
                    <div class="book-rating">
                        <a href="@CalibreBook.Rating.RatingLink">
                            <calibre_net.Client.Components.Shared.StarRatingDisplay
                                Value="@(CalibreBook.Rating.Rating ?? 0)" />
                        </a>
                    </div>
                }

                @if (CalibreBook.Languages != null && CalibreBook.Languages.Count > 0)
                {
                    
                    <div class="book-language">

                        <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Translate"/>
                         @foreach (var lang in CalibreBook.Languages)
                        {
                        <a href="@lang.SearchUrl">
                        <MudChip Href="@lang.SearchUrl" Size="Size.Small"  Variant="Variant.Text" >@L[$"lang_{lang.LangCode}"]</MudChip>
                        </a>
                         }
                    </div>
                }

                 @if (CalibreBook.Identifiers != null && CalibreBook.Identifiers.Count > 0)
                {
                    
                    <div class="book-identifiers">
                        <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Link"/>

                         @foreach (var ident in CalibreBook.Identifiers)
                        {
                            <a href="@ident.Link" target="_blank">
                        <MudChip Color="Color.Success" Variant="Variant.Text" Size="Size.Small" 
                       Href="@ident.Link" Target="_blank">@ident.TypeName</MudChip>
                       </a>
 }
                    </div>
                }
                
    @if (CalibreBook.Tags != null && CalibreBook.Tags.Count > 0)
                {
                    
                    <div class="book-tag">
                        <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Tag"/>
                         @foreach (var tag in CalibreBook.Tags)
                        { 
                        
                            <a href="@tag.SearchUrl" >
                        <MudChip Color="Color.Info" Variant="Variant.Text" Size="Size.Small" 
                        Href="@tag.SearchUrl" >@tag.Name</MudChip>
                       </a>
 }
                    </div>
                }

                @if (CalibreBook.Publisher != null)
                {
                    <div class="book-publisher">
                        <MudText Typo="Typo.body2">Publisher: 
                            <MudLink Typo="Typo.body2" Href="CalibreBook.Publisher.SearchUrl"
                            Class="pl-1">@CalibreBook.Publisher.Name</MudLink>
                        </MudText>
                    </div>
                }

                
                        @if (CalibreBook.Pubdate != null)
                {
                    <div class="book-pubdate">
                         <MudText Typo="Typo.body2">Published: 
                            @CalibreBook.Pubdate.Value.Date.ToString(calibre_net.Shared.DateExtensions.GetDatePatternWithoutWeekday(CultureInfo.CurrentCulture))
                        </MudText>
                    </div>
                }

                @if (CalibreBook.CustomColumns != null)
                {
                    foreach(var cc in CalibreBook.CustomColumns)
                    {
                        <CustomColumnDisplay CustomColumn="@cc.Value" />
                    }
                }

                <!-- Auth Only -->
<div>Mark as read</div>
<div>Archived</div>
                <!-- !Auth Only -->
        </div>
    </div>
            </div>

    @if (CalibreBook.Comments != null){
                <div class="book-comments">
                    <h3 id="decription">Description:</h3>
                    @((MarkupString)CalibreBook.Comments.Text)

                </div>
}
}

@code {

    [Parameter]
    public int Id { get; set; } = 0;
    private BookDto CalibreBook { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {

        CalibreBook = await BookClient.BookAsync(Id);
    }
}