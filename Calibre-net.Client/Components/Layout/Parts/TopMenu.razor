@inject NavigationManager NavigationManager

<MudNavMenu Class="d-flex flex-row-reverse top-right-menu">
	<AuthorizeView>
		<Authorized>
			<MudNavLink Class="w-auto" Href="Account/Logout" Match="NavLinkMatch.Prefix"
				Icon="@Icons.Material.Filled.Logout" IconColor="Color.Inherit">Logout</MudNavLink>
			<MudNavLink Class="w-auto" Href="Account/Manage" Match="NavLinkMatch.Prefix"
				Icon="@Icons.Material.Filled.AccountBox" IconColor="Color.Inherit">@context.User.Identity?.Name
			</MudNavLink>
			<AuthorizeView Policy="Admin" Context="AuthContext">
				<MudNavLink Class="w-auto" Href="Admin" Match="NavLinkMatch.Prefix"
					Icon="@Icons.Material.Filled.SettingsApplications" IconColor="Color.Inherit">Admin</MudNavLink>
			</AuthorizeView>

		</Authorized>
		<NotAuthorized>
			<MudNavLink Href="Account/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Login"
				IconColor="Color.Inherit">Login</MudNavLink>
			<MudNavLink Href="Account/Register" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.PersonAdd"
				IconColor="Color.Inherit">Register</MudNavLink>
		</NotAuthorized>
	</AuthorizeView>

</MudNavMenu>

@code {
	private string? currentUrl;

	protected override void OnInitialized()
	{
		currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
		@* NavigationManager.LocationChanged += OnLocationChanged; *@
	}


}